;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Pzt Eki 7 2019
; Processor: 8086
; Compiler:  MASM32
;
; Before starting simulation set Internal Memory Size 
; in the 8086 model properties to 0x10000
;====================================================================

CODE    SEGMENT PARA 'CODE'
        ASSUME CS:CODE, DS:DATA, SS:STAK
	
STAK    SEGMENT PARA STACK 'STACK'
        DW 20 DUP(?)
STAK    ENDS

DATA    SEGMENT PARA 'DATA'
DIGITS  DB 0C0H, 0F9H, 0A4H, 0B0H, 99H, 92H, 82H, 0F8H, 80H, 98H, 088H, 83H, 0C6H, 0A1H, 86H, 8EH ;array definition
OPRND	DB 3 DUP(?);Bir tane fazladan tanımlayıp kullanıcı tekrar sayı girerse eski yerine koymak için.
DATA    ENDS


START PROC

MOV AX, DATA
MOV DS, AX

MOV AL,81H
OUT 0AFH,AL ; Control Word ayarlıyoruz

BASLANGIC: 
   MOV AL,0FFH;7-Segment Display uçlarına 1 verildi sönük durması için
   OUT 0A9H,AL

   MOV DX,0 ;Tekrar hızlıca input almasın
   XOR BX,BX;Yıldıza basılıp basılmadığını kontrol eder.


GIRDI:
   XOR DI,DI;En önemli index. Data alınıp alınmadığını kontrol eder. Rakama mı yoksa diyeze mi basıldı kontrol eder.
   
   CALL INPUT ;İlk rakamı almak için input almaya gider.
   CMP BX,1;Yıldıza baslılıp basılmadığını kontrol eder.
   JE BASLANGIC
   CMP DI,1
   JNE GIRDI;Sayıya basmadıysa
   JMP DUZGUN
   
ILKTEKRAR:
   DEC DI
   MOV AL,OPRND[DI];İlk başta anlamsız daha sonralarda tekrar basılan değeri saklar.
   MOV OPRND[0],AL  
   MOV DI,1
   
DUZGUN:
;DI 1  
   CALL INPUT ;Diyez beklemek için gider.
   CMP BX,1
   JE BASLANGIC
   CMP DI,2;Tekrar sayıya basmışsa onu ilk operanda atamaya geri döner.
   JE ILKTEKRAR
 
   MOV AL,0BFH;Displaye çizgi basar
   OUT 0A9H,AL
;BU NOKTADA DI KESİNLİKLE 1 OLMALIDIR.
TEKRAR:
   CALL INPUT
   CMP BX,1
   JE BASLANGIC
   CMP DI,2;Sayıya basmışsa onu ikinci operanda atamaya gider
   JNE TEKRAR
;Bu noktada DI 2'dir.
   CALL INPUT;Diyez beklemek için gider.
   CMP BX,1
   JE BASLANGIC
   CMP DI,3;Sayıya basmışsa onu ilk operanda atamaya gider
   JE ILKTEKRAR
   
   XOR DI,DI
   XOR SI,SI
   XOR AX,AX
   XOR DX,DX
   MOV AL,OPRND[0]
   MOV DL,OPRND[1]
   OR DL,AL 
   MOV SI,DX

   XOR DX,DX
   MOV DL,OPRND[1]
   AND DL,AL
   MOV DI,DX
   
   
   
BAS: 
   MOV AL,80H;1.7-Segment displayler çalıştırıldı
   OUT 0ABH,AL
   
   MOV AL,DIGITS[SI]
   OUT 0A9H,AL
   
   CALL WAIT_A_LITTLE

   MOV AL,40H;2.7-segment display çalıştırıldı.
   OUT 0ABH,AL

   MOV AL,DIGITS[DI]
   OUT 0A9H,AL
   
   CALL WAIT_A_LITTLE

   XOR AL,AL
   OUT 0ADH,AL ;Input uçları 0landı
   
   MOV AL,04H
   OUT 0ABH,AL
   ;1.sütüna logic 1 gönderildi.İlk sütün aktifleştirildi.;Diyez bekler
   
   IN AL,0ADH
   ;PC'ye okundu
   CMP AL,08H
   JE BASLANGIC
   
   

   JMP BAS
   
   

RET
START ENDP

WAIT_A_LITTLE PROC NEAR;Ekrana basarken bekleme yerimiz.
   MOV CX,00FFH   
L1: loop L1
RET
WAIT_A_LITTLE ENDP



INPUT PROC NEAR

MAINLOOP:  
   MOV AL,80H
   OUT 0ABH,AL
   ;7-Segment display çalıştırıldı

   MOV AL,01H
   OUT 0ABH,AL
   ;3.sütüna logic 1 gönderildi.
   
   XOR AL,AL
   OUT 0ADH,AL ;Input uçları 0landı
   
   IN AL,0ADH
   ;PC'den okundu
   
   CMP AL,01H
   MOV SI,3
   JE OKU

   CMP AL,02H
   MOV SI,6
   JE OKU
   
   CMP AL,04H
   MOV SI,9
   JE OKU
   
   CMP AL,08H
   JE DIYEZ
   
   MOV AL,02H
   OUT 0ABH,AL
   ;2.sütüna logic 1 gönderildi.
   
   IN AL,0ADH
   ;PC'ye okundu
     
   CMP AL,01H
   MOV SI,2
   JE OKU
   
   CMP AL,02H
   MOV SI,5
   JE OKU
   
   CMP AL,04H
   MOV SI,8
   JE OKU
   
   CMP AL,08H
   MOV SI,0
   JE OKU
   
   MOV AL,04H
   OUT 0ABH,AL
   ;1.sütüna logic 1 gönderildi.İlk sütün aktifleştirildi.
   
   IN AL,0ADH
   ;PC'ye okundu
   
   CMP AL,01H
   MOV SI,1
   JE OKU
   
   CMP AL,02H
   MOV SI,4
   JE OKU
   
   CMP AL,04H
   MOV SI,7
   JE OKU
   
   CMP AL,08H
   JE YILDIZ
   
   MOV DX,1
   JMP MAINLOOP
   
OKU:
   CMP DX,0
   JE MAINLOOP
   MOV AX,SI
   MOV OPRND[DI],AL
   MOV AL, DIGITS[SI]
   OUT 0A9H,AL
   INC DI
   JMP SON
DIYEZ:
   CMP DX,0
   JE MAINLOOP
   JMP SON
YILDIZ:
   CMP DX,0
   JE MAINLOOP
   MOV BX,1
SON:
   MOV DX,0
RET
INPUT ENDP


CODE    ENDS
        END START